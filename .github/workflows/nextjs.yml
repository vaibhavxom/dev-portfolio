name: Deploy Next.js to GitHub Pages

# Trigger the workflow on push to 'main' or manual dispatch
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Set required permissions for GitHub Pages deployment
permissions:
  contents: read        # Read repository content
  pages: write          # Write to GitHub Pages
  id-token: write       # Required for OIDC token for deployment

# Ensure only one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_JSONBIN_API_KEY: ${{ secrets.NEXT_PUBLIC_JSONBIN_API_KEY }}
      NEXT_PUBLIC_JSONBIN_BIN_ID: ${{ secrets.NEXT_PUBLIC_JSONBIN_BIN_ID }}

    steps:
      # Step 1: Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js and enable npm caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: src/main/resources/portfolio-frontend/package-lock.json

      # Step 3: Restore Next.js .next/cache directory (build optimization cache)
      - name: Restore Next.js build cache
        uses: actions/cache@v4
        with:
          path: src/main/resources/portfolio-frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('src/main/resources/portfolio-frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # Step 4: Install all project dependencies using npm
      - name: Install dependencies
        working-directory: src/main/resources/portfolio-frontend
        run: npm ci

      # Step 5: Build the Next.js project (static export assumed via output: 'export' in next.config.js)
      - name: Build Next.js project
        working-directory: src/main/resources/portfolio-frontend
        run: npm run build

      # Step 6: Save updated Next.js build cache (after build)
      - name: Save Next.js build cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: src/main/resources/portfolio-frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('src/main/resources/portfolio-frontend/package-lock.json') }}

      # Step 7: Upload static site to GitHub Pages artifact store
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: src/main/resources/portfolio-frontend/out  # Must be generated by build (via output: 'export')

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step 8: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
